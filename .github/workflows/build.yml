name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        DOTNET_NOLOGO: true
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
        DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
      - name: Powershell versions
        run: |
          powershell '$PSVersionTable'
          pwsh -Command '$PSVersionTable'
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache dotnet
        id: cache-dotnet
        uses: actions/cache@v3
        with:
          path: ${{ env.DOTNET_INSTALL_DIR }}
          key: ${{ runner.os }}-dotnet-6
          restore-keys: ${{ runner.os }}-dotnet-6
      - name: Install dotnet 6
        if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
        uses: actions/setup-dotnet@v3
        with:
            dotnet-version: 6.x.x
      - name: Set installed/cached dotnet path [${{ env.DOTNET_INSTALL_DIR }}]
        shell: pwsh
        run: echo "${{ env.DOTNET_INSTALL_DIR }}" | Out-File -FilePath $ENV:GITHUB_PATH -Encoding utf8 -Append
      - name: Check installed/cached dotnet version
        run: dotnet --version
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"ku3mich_Text.Diff" `
            /o:"ku3mich" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml
          dotnet build --configuration Release
          ./run-tests.ps1
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      - name: Pack nugets
        run: ./run-pack.ps1
      - name: Push-nugets
        env:
            NUGET_FEED: https://api.nuget.org/v3/index.json
            NUGET_KEY: ${{ secrets.NUGET_ORG_API_KEY }}
        run: ./run-push.ps1

